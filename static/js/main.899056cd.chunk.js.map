{"version":3,"sources":["utils/api.js","components/TextInput.jsx","components/Button.jsx","components/CloseButton.jsx","components/TeamBox.jsx","components/YoureUp.jsx","components/Player.jsx","components/PlayerList.jsx","components/Score.jsx","components/CircularProgress.jsx","components/TimerWidget.jsx","utils/useTimer.jsx","components/Modal.jsx","components/Pointing.jsx","components/Acting.jsx","components/Guessing.jsx","components/Turn.jsx","components/PointedAt.jsx","utils/useGameState.jsx","components/Scoreboard.jsx","views/Home/CreateParty.jsx","views/Home/JoinParty.jsx","views/Home/Home.jsx","utils/SocketHOC.jsx","views/Party/WaitingRoom.jsx","views/Party/PromptWriting.jsx","views/Party/GamePlay.jsx","views/Party/Party.jsx","utils/useGamePhase.jsx","views/Sandbox.jsx","components/LoadingIndicator.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API_URL","process","getParty","a","slug","axios","get","res","data","console","error","createParty","host","settings","post","joinParty","username","put","errorMessage","response","message","updateSettings","leaveParty","delete","createGame","addPrompt","author","prompt","startGame","startTurn","endTurn","success","skipTurn","renameTeam","teamIndex","teamName","TextInput","style","label","subLabel","name","value","onChange","maxLength","classes","className","htmlFor","type","Button","variant","disabled","onClick","icon","children","CloseButton","xmlns","width","height","viewBox","fill","strokeWidth","x1","y1","x2","y2","TeamBox","myTeam","myTurn","color","fullHeight","onRenameClick","background","YoureUp","party","firstTurn","games","length","turns","handleYoureUpClick","api","Player","youreUp","playerName","actorUp","onDeck","itemClasses","badgeClasses","PlayerList","players","map","index","key","Score","score","circleConfig","CircleProgressBar","strokeColor","percentage","trailStrokeWidth","trailSpaced","innerText","progressBar","cx","cy","r","stroke","strokeDasharray","strokeDashoffset","x","y","TimerWidget","startTime","turnDurationSeconds","size","useState","countdownTime","setCountdownTime","time","setTime","endTime","useMemo","useEffect","currentTime","Date","now","secondsUntilTurn","Math","floor","setTimeout","intervalId","setInterval","previousTime","clearInterval","string","pad","countdownText","ceil","timeSeconds","minutes","finalTime","Array","join","slice","countdown","useTimer","getTime","display","alignItems","marginRight","fontSize","fontWeight","Modal","isActive","isOpaque","title","body","submitButtonText","noCancel","onClickClose","onClickYes","onClickNo","onClickSubmit","e","stopPropagation","Pointing","teamPlayers","onPoint","guessers","filter","player","PointingItem","backgroundColor","Acting","turn","Guessing","actionText","Turn","acting","includes","PointedAt","pointer","pointee","pointedAtYou","pointedAtIcon","useGameState","game","isHost","totalTurns","nextTeam","teams","teamsCount","playerIndex","inTurn","userTeamIndex","findIndex","team","userTeamName","reorderedTeams","reduce","acc","cur","actorUpTeam","scoreboardTeams","activeTeam","Scoreboard","onScoreboardClose","onLeaveGameClick","onManagePlayersClick","justifyContent","teamColor","paddingBottom","CreateGame","setUsername","hideCreateGameView","setTeamsCount","rotations","setRotations","turnDuration","setTurnDuration","useLocalStorage","setLocalStorage","alert","window","location","pathname","evt","target","marginTop","JoinGame","showCreateGameView","roomCode","setRoomCode","Home","storageUsername","setCurrentViewToParty","createGameOpen","setCreateGameOpen","id","Wrapper","PartyComponent","props","setIsActive","setParty","pointedAt","setPointedAt","useDebouncedCallback","debouncedClearPointedAt","cancel","socket","io","on","emit","WaitingRoom","navigator","clipboard","writeText","href","cursor","PromptWriting","setPrompt","getUserPromptsCount","useCallback","prompts","userPromptsCount","requiredPromptsCount","remainingPromptWriters","remainingPlayersText","remainingPlayersCount","remainingPlayersJoined","text","i","array","handleAddPrompt","handleStartGame","preventDefault","textAlign","onSubmit","GamePlay","renameTeamInput","setRenameTeamInput","scoreboardOpen","setScoredboardOpen","isRenameModalOpen","setIsRenameModalOpen","isLeaveGameModalOpen","setIsLeaveGameModalOpen","isTimesUpModalOpen","setIsTimesUpModalOpen","isManagePlayersModalOpen","setIsManagePlayersModalOpen","handleRenameClick","handleRenameModalClose","handleLeaveGameModalClose","handleTimesUpModalClose","handleManagePlayersModalClose","handleRenameSubmit","handleLeaveGameSubmit","log","handleTimesUpSubmit","marginBottom","SocketHOC","useGamePhase","gamePhase","views","Sandbox","LoadingIndicator","App","currentView","setCurrentView","localStorage","urlSlug","document","remoteParty","home","setCurrentViewToHome","loading","sandbox","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.899056cd.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// get party\nconst getParty = async ({ slug }) => {\n  try {\n    const res = await axios.get(`${API_URL}party/${slug}`);\n\n    return res.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// create party\nconst createParty = async ({ host, settings }) => {\n  try {\n    const res = await axios.post(`${API_URL}party`, {\n      host,\n      settings,\n    });\n\n    return res;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// join party\nconst joinParty = async ({ slug, username }) => {\n  try {\n    const res = await axios.put(`${API_URL}party/${slug}`, {\n      username,\n    });\n\n    return res;\n  } catch (error) {\n    const errorMessage =\n      error.response && error.response.data\n        ? error.response.data\n        : error.message;\n\n    return { error: errorMessage };\n  }\n};\n\n// update settings\nconst updateSettings = async ({ slug, settings }) => {\n  const res = await axios.put(`${API_URL}party/${slug}/settings`, {\n    settings,\n  });\n\n  return res;\n};\n\n// leave party\nconst leaveParty = async ({ slug, username }) => {\n  const res = await axios.delete(`${API_URL}party/${slug}/leave`, {\n    username,\n  });\n\n  return res;\n};\n\n// create game\nconst createGame = async ({ slug }) => {\n  const res = await axios.post(`${API_URL}party/${slug}/game/create`);\n\n  return res;\n};\n\n// add prompt\nconst addPrompt = async ({ slug, author, prompt }) => {\n  const res = await axios.post(`${API_URL}party/${slug}/prompt`, {\n    author,\n    prompt,\n  });\n\n  return res;\n};\n\n// start game\nconst startGame = async ({ slug }) => {\n  const res = await axios.put(`${API_URL}party/${slug}/game/start`);\n\n  return res;\n};\n\n// start turn\nconst startTurn = async ({ slug }) => {\n  const res = await axios.put(`${API_URL}party/${slug}/turn/start`);\n\n  return res;\n};\n\n// end turn\nconst endTurn = async ({ slug, success }) => {\n  const res = await axios.put(`${API_URL}party/${slug}/turn/end`);\n\n  return res;\n};\n\n// skip turn\nconst skipTurn = async ({ slug }) => {\n  const res = await axios.put(`${API_URL}party/${slug}/turn/skip`);\n\n  return res;\n};\n\n// rename team\nconst renameTeam = async ({ slug, teamIndex, teamName }) => {\n  const res = await axios.put(`${API_URL}party/${slug}/rename`, {\n    teamIndex,\n    teamName,\n  });\n\n  return res;\n};\n\nexport default {\n  // party\n  getParty,\n  createParty,\n  joinParty,\n  updateSettings,\n  leaveParty,\n\n  // game\n  addPrompt,\n  createGame,\n  startGame,\n  startTurn,\n  endTurn,\n  skipTurn,\n  renameTeam,\n};\n","import React from \"react\";\nimport \"./TextInput.css\";\n\nconst TextInput = ({\n  style,\n  label,\n  subLabel,\n  name,\n  value,\n  onChange,\n  maxLength,\n}) => {\n  const classes = `${label && \"text-input__label\"}\n    ${subLabel ? \"text-input__label--with-sublabel\" : \"\"}`;\n\n  return (\n    <div className=\"text-input\" style={style}>\n      <label htmlFor={name} className={classes}>\n        {label}\n        {subLabel && (\n          <span className=\"text-input__sub-label text__small\">\n            <br />\n            {subLabel}\n          </span>\n        )}\n      </label>\n      <input\n        name={name}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n        maxLength={maxLength}\n        className=\"text__all-caps text__bold text__heading\"\n      />\n    </div>\n  );\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({\n  className,\n  type,\n  variant,\n  disabled,\n  onClick,\n  style,\n  icon,\n  children,\n}) => {\n  const classes = `${className || \"\"}\n  ${type && type === \"primary\" ? \"button-primary text__heading\" : \"\"}\n  ${type && type === \"secondary\" ? \"button-secondary\" : \"\"}\n  ${variant && variant === \"yes\" ? \"button-yes\" : \"\"}\n  ${variant && variant === \"no\" ? \"button-no\" : \"\"}\n  ${!!disabled ? \"button-disabled\" : \"\"}`;\n\n  return (\n    <button\n      className={classes}\n      onClick={onClick}\n      style={style}\n      disabled={disabled}\n    >\n      {icon && <span className=\"button-secondary__icon\">{icon}</span>}\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport \"./CloseButton.css\";\n\nfunction CloseButton({ onClick }) {\n  return (\n    <Button type=\"secondary\" className=\"close-button\" onClick={onClick}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 32 32\"\n        fill=\"none\"\n        strokeWidth=\"2\"\n      >\n        <line\n          x1=\"8.22188\"\n          y1=\"7.77824\"\n          x2=\"23.7782\"\n          y2=\"23.3346\"\n          strokeWidth=\"2\"\n        />\n        <line\n          x1=\"23.7782\"\n          y1=\"7.7784\"\n          x2=\"8.2218\"\n          y2=\"23.3347\"\n          strokeWidth=\"2\"\n        />\n      </svg>\n    </Button>\n  );\n}\n\nexport default CloseButton;\n","import React from \"react\";\nimport \"./TeamBox.css\";\nimport { Button } from \"./index\";\n\nconst TeamBox = ({\n  className,\n  teamName,\n  children,\n  myTeam,\n  myTurn,\n  color,\n  fullHeight,\n  onRenameClick,\n}) => {\n  const classes = `team-box\n  ${className || \"\"} \n  ${fullHeight ? \"team-box--full-height\" : \"\"}`;\n\n  return (\n    <>\n      <div className={classes}>\n        <div className=\"team-box__header\">\n          <div\n            className=\"team-box__team-label text__all-caps text__heading text__bold\"\n            style={{ background: color }}\n          >\n            {teamName}\n          </div>\n          {myTeam && !myTurn && (\n            <Button\n              onClick={onRenameClick}\n              type=\"secondary\"\n              className=\"team-box__rename-button\"\n            >\n              Rename?\n            </Button>\n          )}\n        </div>\n        <div className=\"team-box__body\" style={{ background: color }}>\n          {children}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TeamBox;\n","import React from \"react\";\n\nimport \"./YoureUp.css\";\nimport { Button } from \"../components\";\nimport api from \"../utils/api\";\n\nfunction YoureUp({ party }) {\n  const firstTurn = party.games[party.games.length - 1].turns.length === 1;\n\n  const handleYoureUpClick = async () => {\n    try {\n      await api.startTurn({ slug: party.slug });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"youre-up\">\n      <h3 className=\"youre-up__title\">\n        {firstTurn ? \"You Go First!\" : \"You're Up\"}\n      </h3>\n      <p className=\"youre-up__text\">\n        Tap the button when you are ready to act out a prompt\n      </p>\n      <Button\n        onClick={handleYoureUpClick}\n        className=\"youre-up__button\"\n        type=\"primary\"\n      >\n        I'm Ready\n      </Button>\n    </div>\n  );\n}\n\nexport default YoureUp;\n","import React from \"react\";\n\nimport \"./Player.css\";\nimport YoureUp from \"./YoureUp\";\n\nconst Player = ({\n  className,\n  youreUp,\n  party,\n  playerName,\n  host,\n  actorUp,\n  onDeck,\n  color,\n}) => {\n  const itemClasses = `player\n  ${className || \"\"}`;\n\n  const badgeClasses = `player__badge player__badge--status text__all-caps \n  text__small text__bold \n  ${actorUp && \"player__badge--status-actor-up\"} \n  ${onDeck && \"player__badge--status-on-deck\"}`;\n\n  return (\n    <li className={itemClasses}>\n      <div className=\"player__item\">\n        {host && (\n          <div className=\"player__badge player__badge--host text__all-caps text__small text__bold\"></div>\n        )}\n        <div\n          className=\"player__name text__all-caps text__heading text__bold\"\n          style={{ color: color }}\n        >\n          {playerName}\n        </div>\n        {(actorUp || onDeck) && (\n          <div\n            className={badgeClasses}\n            style={{ background: onDeck ? color : \"var(--color__foreground)\" }}\n          ></div>\n        )}\n      </div>\n      {youreUp && <YoureUp party={party} />}\n    </li>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\nimport Player from \"./Player\";\nimport \"./PlayerList.css\";\n\nconst PlayerList = ({\n  className,\n  username,\n  party,\n  host,\n  players,\n  actorUp,\n  onDeck,\n  color,\n}) => {\n  const classes = `player-list\n  ${className || \"\"}`;\n\n  return (\n    <ul className={classes}>\n      {players.map((playerName, index) => (\n        <Player\n          party={party}\n          username={username}\n          playerName={playerName}\n          host={host === playerName}\n          actorUp={actorUp === playerName}\n          onDeck={onDeck === playerName}\n          youreUp={actorUp === username && actorUp === playerName}\n          color={color}\n          key={playerName + index}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlayerList;\n","import React from \"react\";\nimport \"./Score.css\";\n\nconst Score = ({ className, score = 0 }) => {\n  const classes = `score\n  ${className || \"\"}`;\n\n  return (\n    <div className={classes}>\n      <span className=\"score__label text__all-caps text__heading text__bold\">Score</span>\n      <span className=\"score__number text__all-caps text__all-caps--large text__bold\">{score}</span>\n    </div>\n  );\n};\n\nexport default Score;\n\n\n\n","// reference: https://github.com/dastasoft/react-ui-components/blob/master/src/components/CircleProgressBar\nimport React, { useState, useEffect } from \"react\";\n\nimport \"./CircularProgress.css\";\n\nconst INITIAL_OFFSET = 25;\nconst circleConfig = {\n  viewBox: \"0 0 38 38\",\n  x: \"19\",\n  y: \"19\",\n  radio: \"15.91549430918954\",\n};\n\nconst CircleProgressBar = ({\n  strokeColor = \"#2d9cdb\",\n  strokeWidth,\n  percentage,\n  trailStrokeWidth,\n  trailSpaced = false,\n  innerText = \"\",\n}) => {\n  const progressBar = percentage * 100;\n\n  return (\n    <svg viewBox={circleConfig.viewBox}>\n      <circle\n        className=\"donut-ring\"\n        cx={circleConfig.x}\n        cy={circleConfig.y}\n        r={circleConfig.radio}\n        fill=\"transparent\"\n        stroke=\"white\"\n        strokeWidth={trailStrokeWidth}\n        strokeDasharray={trailSpaced ? 1 : 0}\n      />\n\n      <circle\n        className=\"donut-segment\"\n        cx={circleConfig.x}\n        cy={circleConfig.y}\n        r={circleConfig.radio}\n        fill=\"transparent\"\n        stroke={strokeColor}\n        strokeWidth={strokeWidth}\n        strokeDasharray={`${progressBar} ${100 - progressBar}`}\n        strokeDashoffset={INITIAL_OFFSET}\n      />\n\n      <g className=\"chart-text\">\n        <text x=\"50%\" y=\"50%\" className=\"chart-label\">\n          {innerText}\n        </text>\n      </g>\n    </svg>\n  );\n};\n\nexport default CircleProgressBar;\n","import React from \"react\";\n\nimport { useTimer } from \"../utils/useTimer\";\nimport CircularProgress from \"./CircularProgress\";\n\nfunction TimerWidget({\n  startTime,\n  turnDurationSeconds,\n  size = \"medium\",\n  color,\n}) {\n  const { countdown, percentage } = useTimer({\n    startTime: new Date(startTime).getTime(),\n    turnDurationSeconds,\n  });\n\n  return (\n    <>\n      {/* small */}\n      {size === \"small\" && (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"28px\",\n              height: \"28px\",\n              marginRight: \"12px\",\n            }}\n          >\n            <CircularProgress\n              strokeWidth={6}\n              trailStrokeWidth={6}\n              percentage={percentage}\n              strokeColor={color}\n            />\n          </div>\n          <h1 style={{ fontSize: \"21px\", fontWeight: 900 }}>{countdown}</h1>\n        </div>\n      )}\n\n      {/* medium */}\n      {size === \"medium\" && (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"80px\",\n              height: \"80px\",\n            }}\n          >\n            <CircularProgress\n              strokeWidth={6}\n              trailStrokeWidth={6}\n              percentage={percentage}\n              innerText={countdown}\n              strokeColor={color}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* medium */}\n      {size === \"large\" && (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"160px\",\n              height: \"160px\",\n            }}\n          >\n            <CircularProgress\n              strokeWidth={5}\n              trailStrokeWidth={5}\n              percentage={percentage}\n              innerText={countdown}\n              strokeColor={color}\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default TimerWidget;\n","// adapted from https://github.com/thibaultboursier/use-timer/\nimport { useEffect, useState, useMemo } from \"react\";\n\nexport const useTimer = ({ startTime, turnDurationSeconds }) => {\n  // 3, 2, 1, 0 before turn starts\n  const [countdownTime, setCountdownTime] = useState(null);\n  // 90, 89, ... starting at turnDurationSeconds\n  const [time, setTime] = useState(null);\n\n  const endTime = useMemo(() => (startTime + turnDurationSeconds) * 1000, [\n    startTime,\n    turnDurationSeconds,\n  ]);\n\n  turnDurationSeconds *= 10;\n\n  useEffect(() => {\n    if (!startTime) {\n      return setTime(null);\n    }\n\n    const currentTime = Date.now();\n\n    // sync time intervals\n    if (time === null && countdownTime === null) {\n      if (startTime >= currentTime) {\n        const secondsUntilTurn = Math.floor((startTime - currentTime) / 100); // 8000\n        const difference = startTime - currentTime - secondsUntilTurn * 100;\n\n        setTimeout(() => {\n          setCountdownTime(secondsUntilTurn);\n        }, difference);\n      } else {\n        const secondsUntilTurn = Math.floor((startTime - currentTime) / 100); // 8000\n        const difference = startTime - currentTime - secondsUntilTurn * 100;\n\n        setTimeout(() => {\n          setTime(turnDurationSeconds + secondsUntilTurn);\n        }, difference);\n      }\n    }\n  }, [startTime, turnDurationSeconds, countdownTime, time]);\n\n  useEffect(() => {\n    let intervalId;\n    const currentTime = Date.now();\n\n    if (currentTime < endTime) {\n      intervalId = setInterval(() => {\n        // countdown is running\n        if (countdownTime > 0) {\n          setCountdownTime((previousTime) => previousTime - 1);\n\n          // countdown ended\n        } else if (countdownTime === 0) {\n          setTime(turnDurationSeconds);\n          setCountdownTime(null);\n\n          // time is running\n        } else if (time > 0) {\n          setTime((previousTime) => previousTime - 1);\n\n          // time ended\n        } else if (intervalId) {\n          clearInterval(intervalId);\n        }\n      }, 100);\n    } else if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    return () => {\n      if (intervalId) {\n        clearInterval(intervalId);\n      }\n    };\n  }, [time, countdownTime, endTime, turnDurationSeconds]);\n\n  const countdownText = [null, \"Go!\", \"Set!\", \"Ready!\"][\n    Math.ceil(countdownTime / 10)\n  ];\n\n  // get time as minutes and seconds\n  const timeSeconds =\n    time !== null ? Math.ceil(time / 10) : turnDurationSeconds / 10;\n\n  const minutes = Math.floor(timeSeconds / 60);\n  const seconds = timeSeconds - minutes * 60;\n\n  const str_pad_left = (string, pad, length) =>\n    (new Array(length + 1).join(pad) + string).slice(-length);\n\n  const finalTime = minutes + \":\" + str_pad_left(seconds, \"0\", 2);\n\n  const percentage = time / turnDurationSeconds;\n\n  return {\n    countdown: countdownText || finalTime,\n    percentage: time === null ? 1 : percentage,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./Modal.css\";\nimport { Button, CloseButton } from \"./\";\n\nconst Modal = ({ className, type, isActive, isOpaque, children, title, body, submitButtonText, noCancel, onClickClose, onClickYes, onClickNo, onClickSubmit }) => {\n\n  const classes = `modal__screen\n  ${className ? className : \"\"}\n  ${isActive ? \"modal__screen--active\" : \"\"}\n  ${isOpaque ? \"modal__screen--opaque\" : \"\"}`\n\n  return (\n    <div\n      className={classes}\n      onClick={onClickClose}\n    >\n      <div\n        className=\"modal__panel\"\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"modal__header\">\n          <p className=\"modal__header-text text__heading\">{title}</p>\n          {!noCancel && (\n            <CloseButton onClick={onClickClose} />\n          )}\n        </div>\n        <div className=\"modal__body text__body\">{body || children}</div>\n        <div className={`modal__buttons ${type === 'confirm' ? ' modal__buttons--confirm' : ''}`}>\n          {type === \"confirm\" && (\n            <>\n              <Button\n                type=\"primary\"\n                variant=\"no\"\n                onClick={onClickNo}\n              >Nope...</Button>\n              <Button\n                type=\"primary\"\n                variant=\"yes\"\n                onClick={onClickYes}\n              >Yep!</Button>\n            </>\n          )}\n          {type === \"alert\" && (\n            <Button\n              type=\"primary\"\n              onClick={onClickSubmit}\n            >{submitButtonText || 'Ok'}</Button>\n          )}\n        </div>\n      </div>\n    </div>\n  ); \n};\n\nexport default Modal;\n","import React from \"react\";\nimport \"./Pointing.css\";\n\nfunction Pointing({ party, teamPlayers, username, onPoint, color }) {\n  const guessers = teamPlayers.filter((player) => {\n    return player !== username;\n  });\n\n  return (\n    <div className=\"pointing\">\n      {guessers.map((player) => (\n        <PointingItem\n          player={player}\n          onPoint={onPoint}\n          color={color}\n          key={player}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Pointing;\n\nfunction PointingItem({ player, onPoint, color }) {\n  const handlePointingItemPress = () => {\n    onPoint(player);\n  };\n\n  return (\n    <div\n      className=\"pointing-item\"\n      style={{ backgroundColor: color }}\n      onClick={handlePointingItemPress}\n    >\n      <h4 className=\"text__all-caps text__heading text__bold\">{player}</h4>\n      <div className=\"pointing-item__pointer\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./Acting.css\";\nimport TimerWidget from \"./TimerWidget\";\nimport Pointing from \"./Pointing\";\n\nfunction Acting({ party, turn, color, username, teamPlayers, onPoint }) {\n  return (\n    <div className=\"acting\">\n      <div className=\"acting__header\">\n        <div className=\"acting__header-text\">\n          <h1\n            className=\"text__all-caps text__heading text__bold\"\n            style={{ color }}\n          >\n            {username}\n          </h1>\n          <h3 className=\"text__heading text__bold\">Your Prompt Is:</h3>\n        </div>\n        <div className=\"acting__timer\">\n          <TimerWidget\n            startTime={turn.startTime}\n            turnDurationSeconds={party.settings.turnDurationSeconds}\n            size=\"medium\"\n            color={color}\n          />\n        </div>\n      </div>\n      <div className=\"acting__prompt\">\n        <h1 className=\"acting__prompt-text\">{turn.prompt}</h1>\n      </div>\n      <Pointing\n        party={party}\n        turn={turn}\n        color={color}\n        teamPlayers={teamPlayers}\n        username={username}\n        onPoint={onPoint}\n      />\n    </div>\n  );\n}\n\nexport default Acting;\n","import React from \"react\";\n\nimport TimerWidget from \"./TimerWidget\";\nimport \"./Guessing.css\";\n\nfunction Guessing({ party, actorUp, color, myTeam, turn }) {\n  const actionText = myTeam\n    ? \"Guess correctly before time is up! ⏰\"\n    : \"You can relax this turn 😎\";\n\n  return (\n    <div className=\"guessing\">\n      <h1 className=\"text__all-caps text__heading text__bold\" style={{ color }}>\n        {actorUp}\n      </h1>\n      <h3 className=\"text__heading text__bold\">Is Acting!</h3>\n\n      <p className=\"guessing__action-text\">{actionText}</p>\n      <div className=\"guessing__timer\">\n        <TimerWidget\n          startTime={turn.startTime}\n          turnDurationSeconds={party.settings.turnDurationSeconds}\n          size=\"large\"\n          color={color}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Guessing;\n","import React from \"react\";\n\nimport \"./Turn.css\";\nimport Acting from \"./Acting\";\nimport Guessing from \"./Guessing\";\n\nfunction Turn({ party, username, turn, actorUp, color, teamPlayers, onPoint }) {\n  const acting = actorUp === username;\n\n  return (\n    <div className=\"turn\">\n      {acting ? (\n        <Acting\n          party={party}\n          turn={turn}\n          username={username}\n          color={color}\n          username={username}\n          teamPlayers={teamPlayers}\n          onPoint={onPoint}\n        />\n      ) : (\n        <Guessing\n          party={party}\n          turn={turn}\n          actorUp={actorUp}\n          color={color}\n          myTeam={teamPlayers.includes(username)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Turn;\n","import React from \"react\";\nimport \"./PointedAt.css\";\n\nfunction PointedAt({ color, pointer, pointee, username }) {\n  const pointedAtYou = pointee === username;\n\n  const pointedAtIcon = pointedAtYou ? \"☚\" : \"☜\";\n\n  return (\n    <div\n      className=\"pointed-at\"\n      style={{\n        backgroundColor: pointedAtYou ? \"#2D9CDB\" : color,\n        color: pointedAtYou ? \"#FFFFFF\" : \"#333333\",\n      }}\n    >\n      <div className=\"pointed-at__text\">\n        <h1>{pointer}</h1>\n        <h1>is pointing</h1>\n        {pointedAtYou ? (\n          <>\n            <h1>at you,</h1>\n            <h1>{pointee}!</h1>\n          </>\n        ) : (\n          <h1>at {pointee}!</h1>\n        )}\n      </div>\n      <div className=\"pointed-at__icon\">{pointedAtIcon}</div>\n    </div>\n  );\n}\n\nexport default PointedAt;\n","/**\n * useGameState.jsx\n * React hook for parsing party object and returning info about game state\n */\nimport { useMemo, useCallback } from \"react\";\n\nexport const useGameState = ({ party, username }) => {\n  // game\n  const game = party.games[party.games.length - 1];\n\n  // turn\n  const turn = game.turns[game.turns.length - 1];\n\n  // isHost\n  const isHost = party.host === username;\n\n  // actorUp\n  const actorUp = turn.player;\n\n  // onDeck\n  const onDeck = useMemo(() => {\n    if (game.totalTurns > game.turns.length) {\n      const nextTeam =\n        game.teams[(turn.teamIndex + 1) % party.settings.teamsCount];\n\n      return nextTeam.teamPlayers[nextTeam.playerIndex];\n    }\n    return \"\";\n  }, [\n    party.settings.teamsCount,\n    turn.teamIndex,\n    game.totalTurns,\n    game.turns.length,\n    game.teams,\n  ]);\n\n  // inTurn\n  // if game is currently in a turn (vs in between turn)\n  const inTurn = useMemo(\n    () =>\n      game.turns[game.turns.length - 1].startTime &&\n      !game.turns[game.turns.length - 1].endTime,\n    [game.turns]\n  );\n\n  // userTeamIndex\n  // original team index of current user. Used for renaming teams.\n  const userTeamIndex = useMemo(\n    () => game.teams.findIndex((team) => team.teamPlayers.includes(username)),\n    [game.teams, username]\n  );\n\n  // userTeamName\n  const userTeamName = game.teams[userTeamIndex].teamName;\n\n  // reordered/filtered teams\n  // teams reordered so that users team is first\n  const reorderedTeams = useMemo(() => {\n    // makes the users team the first team\n    return game.teams.reduce((acc, cur, index) => {\n      return index === userTeamIndex ? [cur, ...acc] : [...acc, cur];\n    }, []);\n  }, [game.teams, userTeamIndex]);\n\n  // actorUpTeam\n  // if in turn only shows team with actor up\n  const actorUpTeam = useMemo(\n    () => game.teams.filter((team) => team.teamPlayers.includes(actorUp)),\n    [game.teams, actorUp]\n  );\n\n  return {\n    // teams\n    teams: inTurn ? actorUpTeam : reorderedTeams,\n    scoreboardTeams: reorderedTeams,\n    activeTeam: actorUpTeam[0],\n\n    // game\n    game,\n    turn,\n\n    // active players\n    inTurn,\n    actorUp,\n    onDeck,\n    isHost,\n\n    // current user\n    userTeamIndex,\n    userTeamName,\n  };\n};\n","import React from \"react\";\n\nimport { Button, TeamBox, PlayerList, Score, TimerWidget } from \"./index\";\nimport { useGameState } from \"../utils/useGameState\";\n\nfunction Scoreboard({\n  party,\n  username,\n  onRenameClick,\n  onScoreboardClose,\n  onLeaveGameClick,\n  onManagePlayersClick,\n}) {\n  const {\n    scoreboardTeams,\n    turn,\n    color,\n    inTurn,\n    isHost,\n    actorUp,\n    onDeck,\n    activeTeam,\n  } = useGameState({\n    party,\n    username,\n  });\n\n  return (\n    <>\n      <header\n        className=\"app__header app__header--with-rule\"\n        style={{ justifyContent: \"space-between\" }}\n      >\n        {isHost ? (\n          <Button\n            onClick={onManagePlayersClick}\n            type=\"secondary\"\n            className=\"button-secondary--min-width\"\n          >\n            <div className=\"player__badge player__badge--host text__all-caps text__small text__bold\"></div>\n            {\"  \"}\n            Manage Players\n          </Button>\n        ) : (\n          <Button\n            onClick={onLeaveGameClick}\n            type=\"secondary\"\n            className=\"button-secondary--min-width\"\n            icon=\"✕\"\n          >\n            Leave Game\n          </Button>\n        )}\n        <TimerWidget\n          startTime={turn.startTime}\n          turnDurationSeconds={party.settings.turnDurationSeconds}\n          size=\"small\"\n          color={activeTeam.teamColor}\n        />\n      </header>\n\n      <main className=\"app__main\" style={{ paddingBottom: 0 }}>\n        {scoreboardTeams.map((team, index) => (\n          <TeamBox\n            key={team.teamName}\n            myTeam={team.teamPlayers.includes(username)}\n            myTurn={actorUp === username}\n            color={team.teamColor}\n            teamName={team.teamName}\n            onRenameClick={onRenameClick}\n          >\n            <PlayerList\n              party={party}\n              username={username}\n              color={team.teamColor}\n              players={team.teamPlayers}\n              actorUp={actorUp}\n              onDeck={onDeck}\n            />\n            <Score score={team.score} />\n          </TeamBox>\n        ))}\n      </main>\n      <footer className=\"app__footer\">\n        <Button\n          onClick={onScoreboardClose}\n          type=\"secondary\"\n          className=\"button-secondary--min-width\"\n          icon=\"⏎\"\n        >\n          Actor Up\n        </Button>\n      </footer>\n    </>\n  );\n}\n\nexport default Scoreboard;\n","/*eslint no-unused-vars: \"ignore\" */\n\nimport React, { useState } from \"react\";\nimport { useLocalStorage } from \"@rehooks/local-storage\";\n\nimport api from \"../../utils/api\";\nimport { TextInput, CloseButton, Button } from \"../../components\";\n\nfunction CreateGame({ username, setUsername, hideCreateGameView }) {\n  const [teamsCount, setTeamsCount] = useState(2);\n  const [rotations, setRotations] = useState(1);\n  const [turnDuration, setTurnDuration] = useState(90);\n\n  const [_, setLocalStorage] = useLocalStorage(\"charades\");\n\n  const createParty = async () => {\n    const res = await api.createParty({\n      host: username,\n      settings: {\n        teamsCount,\n        rotations,\n        turnDuration,\n      },\n    });\n\n    if (!res || !res.data) {\n      alert(\"Server Error\");\n      return;\n    }\n\n    const slug = res.data;\n\n    setLocalStorage({\n      slug,\n      username,\n    });\n\n    window.location.pathname = slug;\n  };\n\n  return (\n    <>\n      <header className=\"app__header app__header--with-rule\">\n        <h1 className=\"text__heading app__title\">WebCharades</h1>\n        <CloseButton onClick={hideCreateGameView} />\n      </header>\n      <main className=\"app__main app__main--home\">\n        <TextInput\n          name=\"teams-count\"\n          label=\"Teams\"\n          subLabel=\"The number of teams playing\"\n          value={teamsCount}\n          onChange={(evt) => {\n            setTeamsCount(evt.target.value);\n          }}\n        />\n        <TextInput\n          name=\"rotations\"\n          label=\"Rotations\"\n          subLabel=\"The number of rounds per player\"\n          style={{ marginTop: \"20px\" }}\n          value={rotations}\n          onChange={(evt) => {\n            setRotations(evt.target.value);\n          }}\n        />\n        <TextInput\n          name=\"turn-duration\"\n          label=\"Turn Duration\"\n          subLabel=\"The length of each turn (in seconds)\"\n          style={{ marginTop: \"20px\" }}\n          value={turnDuration}\n          onChange={(evt) => {\n            setTurnDuration(evt.target.value);\n          }}\n        />\n        <TextInput\n          name=\"player-name\"\n          label=\"Player Name\"\n          subLabel=\" \"\n          style={{ marginTop: \"20px\" }}\n          value={username}\n          onChange={(evt) => {\n            setUsername(evt.target.value);\n          }}\n        />\n        <Button\n          onClick={createParty}\n          type=\"primary\"\n          disabled={false}\n          style={{ marginTop: \"24px\" }}\n        >\n          Create Game\n        </Button>\n      </main>\n      <footer className=\"app__footer\">\n        <Button\n          onClick={hideCreateGameView}\n          type=\"secondary\"\n          className=\"button-secondary--min-width\"\n        >\n          Cancel\n        </Button>\n      </footer>\n    </>\n  );\n}\n\nexport default CreateGame;\n","/*eslint no-unused-vars: \"ignore\" */\nimport React, { useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"@rehooks/local-storage\";\n\nimport api from \"../../utils/api\";\nimport { TextInput, Button } from \"../../components\";\n\nfunction JoinGame({ slug, username, setUsername, showCreateGameView }) {\n  const [roomCode, setRoomCode] = useState(slug);\n  const [_, setLocalStorage] = useLocalStorage(\"charades\");\n\n  useEffect(() => {\n    setRoomCode(slug);\n  }, [slug]);\n\n  const joinParty = async () => {\n    const { error } = await api.joinParty({\n      slug: roomCode,\n      username: username,\n    });\n\n    if (error) {\n      console.error(`SERVER ERROR: ${error}`);\n    }\n\n    setLocalStorage({\n      slug: roomCode,\n      username: username,\n    });\n\n    window.location.pathname = slug;\n  };\n  return (\n    <>\n      <header className=\"app__header\">\n        <h1 className=\"text__heading app__title\">WebCharades</h1>\n      </header>\n      <main className=\"app__main app__main--home\">\n        <TextInput\n          name=\"room-code\"\n          label=\"Room Code\"\n          value={roomCode}\n          onChange={(evt) => {\n            setRoomCode(evt.target.value);\n          }}\n        />\n        <TextInput\n          name=\"player-name\"\n          label=\"Player Name\"\n          style={{ marginTop: \"20px\" }}\n          value={username}\n          onChange={(evt) => {\n            setUsername(evt.target.value);\n          }}\n        />\n        <Button\n          onClick={joinParty}\n          type=\"primary\"\n          style={{ marginTop: \"24px\" }}\n          disabled={!roomCode.length || !username.length}\n        >\n          Join Game\n        </Button>\n      </main>\n      <footer className=\"app__footer\">\n        <Button\n          onClick={showCreateGameView}\n          type=\"secondary\"\n          className=\"button-secondary--min-width\"\n          icon=\"+\"\n        >\n          Create Game\n        </Button>\n      </footer>\n    </>\n  );\n}\n\nexport default JoinGame;\n","import React, { useState } from \"react\";\n\nimport CreateGame from \"./CreateParty\";\nimport JoinGame from \"./JoinParty\";\n\nfunction Home({ username: storageUsername, slug, setCurrentViewToParty }) {\n  const [createGameOpen, setCreateGameOpen] = useState(false);\n  const [username, setUsername] = useState(storageUsername);\n\n  const showCreateGameView = () => setCreateGameOpen(true);\n  const hideCreateGameView = () => setCreateGameOpen(false);\n\n  return (\n    <div id=\"app\">\n      {createGameOpen ? (\n        <CreateGame\n          username={username}\n          setUsername={setUsername}\n          hideCreateGameView={hideCreateGameView}\n          setCurrentViewToParty={setCurrentViewToParty}\n        />\n      ) : (\n        <JoinGame\n          slug={slug}\n          username={username}\n          setUsername={setUsername}\n          showCreateGameView={showCreateGameView}\n          setCurrentViewToParty={setCurrentViewToParty}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport io from \"socket.io-client\";\nimport { useDebouncedCallback } from \"use-debounce\";\n\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL;\n\nconst Wrapper = (PartyComponent) =>\n  function SocketHOC(props) {\n    const [isActive, setIsActive] = useState(false);\n    const [party, setParty] = useState(props.party);\n    const [pointedAt, setPointedAt] = useState({\n      pointer: null,\n      pointee: null,\n    });\n\n    const [debouncedClearPointedAt, cancel] = useDebouncedCallback(() => {\n      setPointedAt({\n        pointer: null,\n        pointee: null,\n      });\n    }, 1000);\n\n    const socket = useMemo(() => io(`${SOCKET_URL}${props.slug}`));\n\n    useEffect(() => {\n      if (!isActive) {\n        socket.on(\"update\", (res) => setParty(res.party));\n\n        socket.on(\"point-at\", ({ pointee, pointer }) => {\n          cancel();\n\n          setPointedAt({\n            pointee,\n            pointer,\n          });\n\n          debouncedClearPointedAt();\n        });\n      }\n\n      socket.on(\"connect\", () => {\n        setIsActive(true);\n      });\n    }, [props, cancel, debouncedClearPointedAt, socket]);\n\n    const handlePoint = (pointee) => {\n      socket.emit(\"point-at\", {\n        pointer: props.username,\n        pointee,\n      });\n    };\n\n    return (\n      <PartyComponent\n        {...props}\n        party={party}\n        onPoint={handlePoint}\n        pointedAt={pointedAt}\n      />\n    );\n  };\n\nexport default Wrapper;\n","import React from \"react\";\n\nimport { Button, PlayerList, TeamBox } from \"../../components\";\nimport api from \"../../utils/api\";\nimport { useGameState } from \"../../utils/useGameState\";\nimport \"./WaitingRoom.css\";\n\nfunction WaitingRoom({ party, username }) {\n  const isHost = party.host === username;\n\n  const startGame = async () => {\n    await api.createGame({ slug: party.slug });\n  };\n\n  const handleRoomCodeClick = () =>\n    navigator.clipboard.writeText(window.location.href);\n\n  return (\n    <>\n      <header className=\"app__header app__header--with-rule \">\n        <div className=\"waiting-room__header\">\n          <span className=\"waiting-room__header-left\">\n            <h1 className=\"text__heading\">WebCharades</h1>\n          </span>\n          <span className=\"waiting-room__header-divider\"></span>\n          <span className=\"waiting-room__header-right\">\n            <p className=\"waiting-room__header-subtext\">Room:</p>\n            <h1\n              onClick={handleRoomCodeClick}\n              className=\"text__heading text__all-caps\"\n              style={{ cursor: \"pointer\" }}\n            >\n              {party.slug}\n            </h1>\n          </span>\n        </div>\n      </header>\n      <main className=\"app__main app__main--home\">\n        <TeamBox\n          color=\"var(--color__foreground)\"\n          players={party.players}\n          teamName=\"Players\"\n        >\n          <PlayerList\n            color=\"var(--color__foreground)\"\n            players={party.players}\n            host={party.host}\n          />\n        </TeamBox>\n        <p className=\"waiting-room__waiting-text\">\n          Waiting for all players to join...\n        </p>\n      </main>\n      <footer className=\"app__footer\">\n        {isHost && (\n          <Button\n            type=\"primary\"\n            className=\"button-secondary--min-width\"\n            onClick={startGame}\n          >\n            Everyone's Here!\n          </Button>\n        )}\n      </footer>\n    </>\n  );\n}\n\nexport default WaitingRoom;\n","import React, { useState, useMemo, useCallback } from \"react\";\n\nimport { Button, TextInput } from \"../../components\";\nimport { useGameState } from \"../../utils/useGameState\";\nimport api from \"../../utils/api\";\n\nfunction PromptWriting({ party, username }) {\n  const [prompt, setPrompt] = useState(\"\");\n\n  const getUserPromptsCount = useCallback(\n    (username) => {\n      return party.prompts.filter((prompt) => {\n        return prompt.author === username;\n      }).length;\n    },\n    [party]\n  );\n\n  const userPromptsCount = useMemo(() => getUserPromptsCount(username), [\n    getUserPromptsCount,\n    username,\n  ]);\n\n  const requiredPromptsCount = useMemo(() => {\n    return Math.ceil(\n      (party.players.length / party.settings.teamsCount) *\n        party.settings.rotations\n    );\n  }, [party]);\n\n  const remainingPromptWriters = useMemo(() => {\n    return party.players.filter((player) => {\n      return getUserPromptsCount(player) < requiredPromptsCount;\n    });\n  }, [party, getUserPromptsCount, requiredPromptsCount]);\n\n  const remainingPlayersText = useMemo(() => {\n    const remainingPlayersCount = remainingPromptWriters.length;\n\n    if (remainingPlayersCount > 3) {\n      return `Waiting for ${remainingPlayersCount} players to write their prompts.`;\n    }\n\n    if (remainingPlayersCount > 0) {\n      const remainingPlayersJoined = remainingPromptWriters.reduce(\n        (text, username, i, array) =>\n          text + (i < array.length - 1 ? \", \" : \" and \") + username\n      );\n\n      return `Still waiting for ${remainingPlayersJoined}!`;\n    }\n\n    return \"Everyone finished their clues! 🥳🥳🥳\";\n  }, [remainingPromptWriters]);\n\n  const handleAddPrompt = async () => {\n    if (!prompt.length) return;\n\n    await api.addPrompt({\n      slug: party.slug,\n      author: username,\n      prompt,\n    });\n\n    setPrompt(\"\");\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    handleAddPrompt();\n  };\n\n  const handleStartGame = async (evt) => {\n    evt.preventDefault();\n\n    await api.startGame({\n      slug: party.slug,\n    });\n  };\n\n  return (\n    <>\n      <header className=\"app__header\">\n        <h1 className=\"text__heading app__title\">WebCharades</h1>\n      </header>\n      <main className=\"app__main app__main--home\">\n        <h3>Start Writing!</h3>\n        <p style={{ marginTop: \"40px\", width: \"200px\", textAlign: \"center\" }}>\n          {remainingPlayersText}\n        </p>\n        <p className=\"text-input__sub-label\" style={{ marginTop: \"40px\" }}>\n          {`Prompt ${userPromptsCount + 1} of ${requiredPromptsCount}`}\n        </p>\n        <form onSubmit={handleSubmit}>\n          <TextInput\n            name=\"prompt\"\n            style={{ marginTop: \"20px\" }}\n            value={prompt}\n            onChange={(evt) => {\n              setPrompt(evt.target.value);\n            }}\n          />\n          <Button type=\"primary\" style={{ marginTop: \"24px\" }}>\n            Submit Prompt\n          </Button>\n        </form>\n      </main>\n      <footer className=\"app__footer\">\n        {!remainingPromptWriters.length && (\n          <Button\n            type=\"secondary\"\n            className=\"button-secondary--min-width\"\n            onClick={handleStartGame}\n          >\n            Start Game!\n          </Button>\n        )}\n      </footer>\n    </>\n  );\n}\n\nexport default PromptWriting;\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  Button,\n  TeamBox,\n  PlayerList,\n  Score,\n  Turn,\n  Modal,\n  TextInput,\n  PointedAt,\n  Scoreboard,\n} from \"../../components\";\nimport \"./GamePlay.css\";\nimport api from \"../../utils/api\";\nimport { useGameState } from \"../../utils/useGameState\";\n\nfunction GamePlay({ party, username, isHost, onPoint, pointedAt }) {\n  // state\n  const {\n    teams,\n    scoreboardTeams,\n    game,\n    turn,\n    inTurn,\n    actorUp,\n    onDeck,\n    userTeamIndex,\n    userTeamName,\n  } = useGameState({ party, username });\n\n  const [renameTeamInput, setRenameTeamInput] = useState(userTeamName);\n\n  const [scoreboardOpen, setScoredboardOpen] = useState(false);\n\n  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);\n  const [isLeaveGameModalOpen, setIsLeaveGameModalOpen] = useState(false);\n  const [isTimesUpModalOpen, setIsTimesUpModalOpen] = useState(false);\n  const [isManagePlayersModalOpen, setIsManagePlayersModalOpen] = useState(\n    false\n  );\n\n  // event handlers\n  const handleRenameClick = () => setIsRenameModalOpen(true);\n  const handleRenameModalClose = () => setIsRenameModalOpen(false);\n\n  const handleLeaveGameClick = () => setIsLeaveGameModalOpen(true);\n  const handleLeaveGameModalClose = () => setIsLeaveGameModalOpen(false);\n\n  const handleTimesUpClick = () => setIsTimesUpModalOpen(true);\n  const handleTimesUpModalClose = () => setIsTimesUpModalOpen(false);\n\n  const handleManagePlayersClick = () => setIsManagePlayersModalOpen(true);\n  const handleManagePlayersModalClose = () =>\n    setIsManagePlayersModalOpen(false);\n\n  const handleScoreboardOpen = () => setScoredboardOpen(true);\n  const handleScoreboardClose = () => setScoredboardOpen(false);\n\n  const handleRenameSubmit = async () => {\n    try {\n      await api.renameTeam({\n        slug: party.slug,\n        teamName: renameTeamInput,\n        teamIndex: userTeamIndex,\n      });\n\n      handleRenameModalClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleLeaveGameSubmit = async () => {\n    try {\n      const res = await api.leaveParty({\n        slug: party.slug,\n        username,\n      });\n\n      console.log(res);\n\n      handleLeaveGameModalClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleTimesUpSubmit = async (success) => {\n    try {\n      await api.endTurn({\n        slug: party.slug,\n        success,\n      });\n\n      handleTimesUpModalClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // resets scoreboard to when not in turn\n  useEffect(() => {\n    if (inTurn) {\n      setScoredboardOpen(false);\n    }\n  }, [inTurn]);\n\n  if (pointedAt.pointer && pointedAt.pointer !== username) {\n    return (\n      <PointedAt\n        pointer={pointedAt.pointer}\n        pointee={pointedAt.pointee}\n        username={username}\n        color={teams[0].teamColor}\n      />\n    );\n  }\n\n  return (\n    <>\n      {/* scoreboard */}\n      {scoreboardOpen && (\n        <Scoreboard\n          party={party}\n          username={username}\n          teams={scoreboardTeams}\n          turn={turn}\n          onRenameClick={handleRenameClick}\n          onScoreboardClose={handleScoreboardClose}\n          onLeaveGameClick={handleLeaveGameClick}\n          onManagePlayersClick={handleManagePlayersClick}\n        />\n      )}\n\n      {/* header */}\n      {!inTurn && !scoreboardOpen && (\n        <header className=\"app__header app__header--with-rule\">\n          <h1 className=\"text__heading app__title\">Teams</h1>\n        </header>\n      )}\n\n      {!scoreboardOpen && (\n        <>\n          <main className=\"app__main\" style={{ paddingBottom: 0 }}>\n            {teams.map((team, index) => (\n              <TeamBox\n                key={team.teamName}\n                myTeam={team.teamPlayers.includes(username)}\n                myTurn={actorUp === username}\n                color={team.teamColor}\n                teamName={team.teamName}\n                fullHeight={inTurn}\n                onRenameClick={handleRenameClick}\n              >\n                {inTurn ? (\n                  <Turn\n                    party={party}\n                    username={username}\n                    turn={turn}\n                    actorUp={actorUp}\n                    color={team.teamColor}\n                    teamPlayers={team.teamPlayers}\n                    onPoint={onPoint}\n                  />\n                ) : (\n                  <>\n                    <PlayerList\n                      party={party}\n                      username={username}\n                      color={team.teamColor}\n                      players={team.teamPlayers}\n                      actorUp={actorUp}\n                      onDeck={onDeck}\n                    />\n                    {game.turns.length > 1 && <Score score={team.score} />}\n                  </>\n                )}\n              </TeamBox>\n            ))}\n          </main>\n          <footer className=\"app__footer\">\n            {inTurn && actorUp !== username && (\n              <Button\n                onClick={handleScoreboardOpen}\n                type=\"secondary\"\n                className=\"button-secondary--min-width\"\n                icon=\"♛\"\n              >\n                Scoreboard\n              </Button>\n            )}\n          </footer>\n        </>\n      )}\n\n      {/* Rename Modal */}\n      <Modal\n        isActive={isRenameModalOpen}\n        onClickClose={handleRenameModalClose}\n        title=\"Rename Team?\"\n        submitButtonText=\"Rename Team\"\n        onClickSubmit={handleRenameSubmit}\n        type=\"alert\"\n      >\n        <p style={{ marginBottom: \"12px\" }}>Enter a new team name</p>\n        <TextInput\n          onChange={(e) => setRenameTeamInput(e.target.value)}\n          value={renameTeamInput}\n          maxLength={10}\n        />\n      </Modal>\n\n      {/* Leave Game Modal */}\n      <Modal\n        isActive={isLeaveGameModalOpen}\n        onClickClose={handleLeaveGameModalClose}\n        title=\"Leave Game?\"\n        submitButtonText=\"Leave Game\"\n        onClickSubmit={handleLeaveGameSubmit}\n        type=\"alert\"\n        body={<p style={{ marginBottom: \"12px\" }}>Leave this game now</p>}\n      />\n\n      {/* Time's Up Modal */}\n      <Modal\n        isOpaque\n        isActive={isTimesUpModalOpen}\n        onClickClose={handleTimesUpModalClose}\n        title=\"Time's Up! Did You Get It?\"\n        onClickYes={() => handleTimesUpSubmit(true)}\n        onClickNo={() => handleTimesUpSubmit(false)}\n        type=\"confirm\"\n        body={\n          <p style={{ marginBottom: \"12px\" }}>Did your team guess correctly?</p>\n        }\n      />\n\n      {/* Manage Players */}\n      {/* TODO, make this modal */}\n      <Modal\n        isActive={isManagePlayersModalOpen}\n        onClickClose={handleManagePlayersModalClose}\n        title=\"ManagePlayers?\"\n        submitButtonText=\"I'm Done\"\n        onClickSubmit={handleManagePlayersModalClose}\n        type=\"alert\"\n      >\n        {/* TODO: Add skip turn feature here! */}\n        {/* TODO: Add team box with players to remove */}\n      </Modal>\n    </>\n  );\n}\n\nexport default GamePlay;\n","import React, { useEffect, useState } from \"react\";\nimport SocketHOC from \"../../utils/SocketHOC\";\n\nimport WaitingRoom from \"./WaitingRoom\";\nimport PromptWriting from \"./PromptWriting\";\nimport GamePlay from \"./GamePlay\";\nimport { useGamePhase } from \"../../utils/useGamePhase\";\n\n// Logic for which game view and what what props are passed down is handled here.\nfunction Party({ username, party, pointedAt, onPoint }) {\n  const [gamePhase] = useGamePhase(party);\n\n  const props = {\n    party,\n    username,\n    pointedAt,\n    onPoint,\n  };\n\n  const views = {\n    \"pre-game\": <WaitingRoom {...props} />,\n    \"prompt-writing\": <PromptWriting {...props} />,\n    \"game-play\": <GamePlay {...props} />,\n  };\n\n  return <>{views[gamePhase]}</>;\n}\n\nexport default SocketHOC(Party);\n","/**\n * useGamePhase.jsx\n * React hook for parsing party object and returning what phase game is in\n */\nimport { useMemo, useCallback } from \"react\";\n\nexport const useGamePhase = (party) => {\n  const game = party.games[party.games.length - 1];\n\n  const gamePhase = useMemo(() => {\n    // **pre-game lobby:**\n    if (party.games.length === 0) {\n      return \"pre-game\";\n    }\n\n    // **prompt-writing:**\n    else if (game.startTime === null) {\n      return \"prompt-writing\";\n    }\n\n    // **game-play:**\n    else if (game.startTime && game.endTime === null) {\n      return \"game-play\";\n    }\n\n    // **post-game lobby**\n    else if (game.endTime !== null) {\n      return \"post-game\";\n    }\n  }, [party]);\n\n  return [gamePhase];\n};\n","import React, { useState } from \"react\";\nimport {\n  TeamBox,\n  PlayerList,\n  Score,\n  Button,\n  Modal,\n  TextInput,\n  TimerWidget,\n} from \"../components\";\n\nfunction Sandbox() {\n  const [active, setActive] = useState(false);\n\n  return (\n    <div className=\"app__main\">\n      {/* <TeamBox\n        teamName={'Christmas Santas'}\n        myTeam={true}\n        color={'aquamarine'}\n      >\n        <PlayerList\n          players={['Fortch', 'Stung', 'Pristina']}\n          host={'Stung'}\n          actorUp={'Fortch'}\n          onDeck={'Pristina'}\n          color={'aquamarine'}\n          />\n        <Score score={48} />\n      </TeamBox>\n      <Button onClick={() => setActive(true)}>open modal</Button>\n      <Modal\n        title=\"I Wish U Would?\"\n        isActive={active}\n        onClickClose={() => setActive(false)}\n        onClickSubmit={() => console.log('submit')}\n        type=\"alert\"\n        submitButtonText=\"Wow ok!\"\n      >\n        <p style={{marginBottom: '12px'}}>Sup with all this wild stuff</p>\n        <TextInput/>\n      </Modal> */}\n      <h1> Timer Widget </h1>\n      <br />\n      <br />\n\n      <TimerWidget\n        startTime={Date.now() + 3000}\n        turnDurationSeconds={60}\n        size=\"small\"\n      />\n      <br />\n      <TimerWidget\n        startTime={Date.now() + 3000}\n        turnDurationSeconds={60}\n        size=\"medium\"\n      />\n      <br />\n      <TimerWidget\n        startTime={Date.now() + 3000}\n        turnDurationSeconds={60}\n        size=\"large\"\n      />\n    </div>\n  );\n}\n\nexport default Sandbox;\n","// reference: https://github.com/tobiasahlin/SpinKit\nimport React from \"react\";\nimport \"./LoadingIndicator.css\";\n\nfunction LoadingIndicator() {\n  return (\n    <div className=\"app__main app__main--home\">\n      <div className=\"spinner\">\n        <div className=\"cube1\"></div>\n        <div className=\"cube2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default LoadingIndicator;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"@rehooks/local-storage\";\n\nimport Home from \"./views/Home/Home\";\nimport Party from \"./views/Party/Party\";\nimport Sandbox from \"./views/Sandbox\";\nimport LoadingIndicator from \"./components/LoadingIndicator\";\nimport api from \"./utils/api\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\nfunction App() {\n  const [currentView, setCurrentView] = useState(\"loading\");\n  const [party, setParty] = useState({});\n  const [localStorage, setLocalStorage] = useLocalStorage(\"charades\", {\n    username: \"\",\n    slug: \"\",\n  });\n\n  const setCurrentViewToHome = () => setCurrentView(\"home\");\n  const setCurrentViewToParty = () => setCurrentView(\"party\");\n\n  useEffect(() => {\n    const loadSlug = async () => {\n      const urlSlug = document.location.pathname.slice(1);\n\n      if (!urlSlug) {\n        if (!localStorage.slug) {\n          setLocalStorage({\n            ...localStorage,\n            slug: \"\",\n          });\n        } else {\n          const remoteParty = await api.getParty({ slug: localStorage.slug });\n\n          if (\n            remoteParty &&\n            remoteParty.players.includes(localStorage.username)\n          ) {\n            window.location.pathname = localStorage.slug;\n            setParty(remoteParty);\n            setCurrentView(\"party\");\n            return;\n          }\n\n          setLocalStorage({\n            ...localStorage,\n            slug: \"\",\n          });\n        }\n      } else {\n        // if development and sandbox\n        if (isDevelopment && urlSlug.toLowerCase() === \"sandbox\") {\n          setCurrentView(\"sandbox\");\n          return;\n        }\n\n        if (urlSlug === localStorage.slug) {\n          const remoteParty = await api.getParty({ slug: localStorage.slug });\n\n          if (\n            remoteParty &&\n            remoteParty.players.includes(localStorage.username)\n          ) {\n            setParty(remoteParty);\n            setCurrentView(\"party\");\n            return;\n          }\n        } else {\n          setLocalStorage({\n            ...localStorage,\n            slug: urlSlug,\n          });\n        }\n      }\n      setCurrentView(\"home\");\n    };\n\n    // forces loading screen to show at least 500 ms\n    setTimeout(loadSlug, 500);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const views = {\n    home: (\n      <Home\n        slug={localStorage.slug}\n        username={localStorage.username}\n        setCurrentViewToParty={setCurrentViewToParty}\n      />\n    ),\n    party: (\n      <Party\n        slug={localStorage.slug}\n        username={localStorage.username}\n        party={party}\n        setCurrentViewToHome={setCurrentViewToHome}\n      />\n    ),\n    loading: <LoadingIndicator />,\n    sandbox: <Sandbox />,\n  };\n\n  return <div id=\"app\">{views[currentView]}</div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}